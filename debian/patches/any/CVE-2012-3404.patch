Origin: http://sourceware.org/git/?p=glibc.git;a=commitdiff;h=84a4211850e3d23a9d3a4f3b294752a3b30bc0ff
From 84a4211850e3d23a9d3a4f3b294752a3b30bc0ff Mon Sep 17 00:00:00 2001
From: Petr Baudis <pasky@suse.cz>
Date: Sun, 20 Feb 2011 07:59:49 -0500
Subject: [PATCH] Fix allocation when handling positional parameters in printf.

2011-01-27  Petr Baudis  <pasky@suse.cz>
	    Ulrich Drepper  <drepper@gmail.com>

	* stdio-common/vfprintf.c (vfprintf): Pass correct newlen
	to extend_alloca().
	* stdio-common/bug23.c: New file.
	* stdio-common/Makefile (tests): Add bug23.

CVE-2012-3404

---
 stdio-common/Makefile   |    3 ++-
 stdio-common/bug23.c    |   21 +++++++++++++++++++++
 stdio-common/vfprintf.c |    5 +++--
 3 files changed, 26 insertions(+), 3 deletions(-)
 create mode 100644 stdio-common/bug23.c

Index: glibc-2.7/stdio-common/Makefile
===================================================================
--- glibc-2.7.orig/stdio-common/Makefile	2012-09-20 14:38:16.000000000 -0700
+++ glibc-2.7/stdio-common/Makefile	2012-09-26 14:34:20.000000000 -0700
@@ -57,7 +57,8 @@
 	 tst-perror tst-sprintf tst-rndseek tst-fdopen tst-fphex bug14 bug15 \
 	 tst-popen tst-unlockedio tst-fmemopen2 tst-put-error tst-fgets \
 	 tst-fwrite bug16 bug17 tst-swscanf tst-sprintf2 bug18 bug18a \
-	 bug19 bug19a tst-popen2 scanf13 scanf14 scanf15 bug-vfprintf-nargs
+	 bug19 bug19a tst-popen2 scanf13 scanf14 scanf15 bug-vfprintf-nargs \
+	 bug23
 
 test-srcs = tst-unbputc tst-printf
 
Index: glibc-2.7/stdio-common/bug23.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ glibc-2.7/stdio-common/bug23.c	2012-09-26 14:34:20.000000000 -0700
@@ -0,0 +1,21 @@
+#include <stdio.h>
+#include <string.h>
+
+static char buf[32768];
+static const char expected[] = "\
+\n\
+a\n\
+abbcd55%%%%%%%%%%%%%%%%%%%%%%%%%%\n";
+
+static int
+do_test (void)
+{
+  snprintf (buf, sizeof (buf),
+	    "\n%1$s\n" "%1$s" "%2$s" "%2$s" "%3$s" "%4$s" "%5$d" "%5$d"
+	    "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n",
+	    "a", "b", "c", "d", 5);
+  return strcmp (buf, expected) != 0;
+}
+
+#define TEST_FUNCTION do_test ()
+#include "../test-skeleton.c"
Index: glibc-2.7/stdio-common/vfprintf.c
===================================================================
--- glibc-2.7.orig/stdio-common/vfprintf.c	2012-09-20 14:38:16.000000000 -0700
+++ glibc-2.7/stdio-common/vfprintf.c	2012-09-26 14:34:20.000000000 -0700
@@ -1,5 +1,4 @@
-/* Copyright (C) 1991-2002, 2003, 2004, 2005, 2006, 2007
-   Free Software Foundation, Inc.
+/* Copyright (C) 1991-2008, 2009, 2010, 2011   Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -1666,24 +1665,11 @@
 	  {
 	    /* Extend the array of format specifiers.  */
 	    struct printf_spec *old = specs;
-
-	    nspecs_max *= 2;
-	    specs = alloca (nspecs_max * sizeof (struct printf_spec));
-
-	    if (specs == &old[nspecs])
-	      /* Stack grows up, OLD was the last thing allocated;
-		 extend it.  */
-	      nspecs_max += nspecs_max / 2;
-	    else
-	      {
-		/* Copy the old array's elements to the new space.  */
-		memcpy (specs, old, nspecs * sizeof (struct printf_spec));
-		if (old == &specs[nspecs])
-		  /* Stack grows down, OLD was just below the new
-		     SPECS.  We can use that space when the new space
-		     runs out.  */
-		  nspecs_max += nspecs_max / 2;
-	      }
+	    specs = extend_alloca (specs, nspecs_max,
+				   2 * nspecs_max * sizeof (*specs));
+ 
+ 	    /* Copy the old array's elements to the new space.  */
+ 	    memmove (specs, old, nspecs * sizeof (struct printf_spec));
 	  }
 
 	/* Parse the format specifier.  */
