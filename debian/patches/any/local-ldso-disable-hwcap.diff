# DP: Allow hwcap's to be disabled with the existence of a file. This
# DP: makes it easier to do upgrades with optimized (hwcap) library
# DP: packages.
# DP: Author: Rewritten by Daniel Jacobowitz <dan@debian.org>
# DP: Upstream status: Debian-Specific
# DP: Status Details: This isn't going to be acceptable upstream, we
# DP:                 only need it because we support in-place upgrades.
# DP: Date: 2003-10-28, (Updated 2005-01-02 gotom)

Index: elf/dl-sysdep.c
===================================================================
RCS file: /cvs/glibc/libc/elf/dl-sysdep.c,v
retrieving revision 1.113
diff -u -r1.113 dl-sysdep.c
--- elf/dl-sysdep.c	6 Nov 2004 00:24:47 -0000	1.113
+++ elf/dl-sysdep.c	2 Jan 2005 10:24:13 -0000
@@ -408,7 +408,11 @@
 #ifdef USE_TLS
   /* For TLS enabled builds always add 'tls'.  */
   ++cnt;
-#else
+#endif
+
+  if (__access ("/etc/ld.so.nohwcap", F_OK) == 0)
+    cnt = 0;
+
   if (cnt == 0)
     {
       /* If we no have platform name and no important capability we only
@@ -423,7 +427,6 @@
       *sz = 1;
       return result;
     }
-#endif
 
   /* Create temporary data structure to generate result table.  */
   temp = (struct r_strlenpair *) alloca (cnt * sizeof (*temp));
@@ -488,9 +491,7 @@
   result = (struct r_strlenpair *) malloc (*sz * sizeof (*result) + total);
   if (result == NULL)
     {
-#ifndef USE_TLS
     no_memory:
-#endif
       _dl_signal_error (ENOMEM, NULL, NULL,
 			N_("cannot create capability list"));
     }
Index: elf/dl-cache.c
===================================================================
RCS file: /cvs/glibc/libc/elf/dl-cache.c,v
retrieving revision 1.46
diff -u -r1.46 dl-cache.c
--- elf/dl-cache.c	19 Mar 2004 00:36:32 -0000	1.46
+++ elf/dl-cache.c	2 Jan 2005 10:23:42 -0000
@@ -244,6 +244,7 @@
   if (cache_new != (void *) -1)
     {
       uint64_t platform;
+      int disable_hwcap = 0;
 
       /* This is where the strings start.  */
       cache_data = (const char *) cache_new;
@@ -255,6 +256,9 @@
       if (platform != (uint64_t) -1)
 	platform = 1ULL << platform;
 
+      if (__access ("/etc/ld.so.nohwcap", F_OK) == 0)
+	disable_hwcap = 1;
+
       /* Only accept hwcap if it's for the right platform.  */
 #ifdef USE_TLS
 # define _DL_HWCAP_TLS_MASK (1LL << 63)
@@ -264,6 +268,8 @@
 #define HWCAP_CHECK \
       if (GLRO(dl_osversion) && lib->osversion > GLRO(dl_osversion))	      \
 	continue;							      \
+      if (disable_hwcap && lib->hwcap != 0)				      \
+	continue;							      \
       if (_DL_PLATFORMS_COUNT						      \
 	  && (lib->hwcap & _DL_HWCAP_PLATFORM) != 0			      \
 	  && (lib->hwcap & _DL_HWCAP_PLATFORM) != platform)		      \
