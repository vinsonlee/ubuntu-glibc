# All lines beginning with `# DP:' are a description of the patch.
# DP: Make ldd handle non-executable shared objects
# DP: 
# DP: Updated by gotom, it's nice to merge to the upstream after my review.
# Date: (Updated 2004-01-02 gotom)

Index: elf/ldd.bash.in
===================================================================
--- elf/ldd.bash.in.orig
+++ elf/ldd.bash.in
@@ -31,6 +31,7 @@
 warn=
 bind_now=
 verbose=
+filename_magic_regex="((^|/)lib|.so$)"
 
 while test $# -gt 0; do
   case "$1" in
@@ -151,8 +152,11 @@
     echo "ldd: ${file}:" $"not regular file" >&2
     result=1
   elif test -r "$file"; then
-    test -x "$file" || echo 'ldd:' $"\
-warning: you do not have execution permission for" "\`$file'" >&2
+    if test ! -x "$file" && eval echo "$file" \
+	| egrep -v "$filename_magic_regex" > /dev/null; then
+	echo 'ldd:' $"warning: you do not have execution permission for"\
+	    "\`$file'" >&2
+    fi
     RTLD=
     ret=1
     for rtld in ${RTLDLIST}; do
@@ -169,7 +173,11 @@
       # If the program exits with exit code 5, it means the process has been
       # invoked with __libc_enable_secure.  Fall back to running it through
       # the dynamic linker.
-      try_trace "$file"
+      if test -x "$file"; then
+	try_trace "$file"
+      else
+	try_trace "${RTLD}" "$file"
+      fi
       rc=$?
       if [ $rc = 5 ]; then
 	try_trace "$RTLD" "$file"
