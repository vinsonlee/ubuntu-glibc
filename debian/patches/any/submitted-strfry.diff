Turn strfry() into a proper Fisher-Yates shuffle. This gives us exactly
n! paths for a string with N characters, and since there are n! possible
permutations, we get a one-to-one mapping, and all possibilities are 
equally likely.

Index: string/strfry.c
===================================================================
--- string/strfry.c.orig
+++ string/strfry.c
@@ -37,16 +37,16 @@
       init = 1;
     }
 
-  len = strlen (string) - 1;
-  for (i = 0; i < len; ++i)
+  len = strlen (string);
+  for (i = 0; i < len - 1; ++i)
     {
       int32_t j;
       __random_r (&rdata, &j);
-      j = j % len + 1;
+      j %= (len - i);
 
       char c = string[i];
-      string[i] = string[j];
-      string[j] = c;
+      string[i] = string[j + i];
+      string[j + i] = c;
     }
 
   return string;
