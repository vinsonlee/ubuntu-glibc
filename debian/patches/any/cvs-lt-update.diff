diff -Nurd linuxthreads.orig/ChangeLog linuxthreads/ChangeLog
--- linuxthreads.orig/ChangeLog	2006-10-01 19:05:33.000000000 +0200
+++ linuxthreads/ChangeLog	2007-01-08 03:14:22.000000000 +0100
@@ -1,3 +1,34 @@
+2006-10-31  Ian Lance Taylor  <ian@airs.com>
+
+	* specific.c (__pthread_destroy_specifics): Clear pointer before
+	freeing.
+
+2006-10-31  Mike Frysinger  <vapier@gentoo.org>
+
+	* sysdeps/ia64/tcb-offsets.sym (MULTIPLE_THREADS_OFFSET): Fix typo
+	TLS_PRE_TCB_SIZE.
+
+2006-10-03  Richard Sandiford  <richard@codesourcery.com>
+
+	* sysdeps/m68k/pt-machine.h (__compare_and_swap): Don't define for
+	Coldfire.
+	(HAS_COMPARE_AND_SWAP): Likewise.
+	* sysdeps/unix/sysv/linux/m68k/sysdep-cancel.h (PSEUDO): Pass a
+	temporary register to SINGLE_THREAD_P.
+	(__local_multiple_threads): Do not mark hidden in librt.
+	(SINGLE_THREAD_P): Make the assembler version take a temporary
+	register argument.  Load __local_multiple_threads from the GOT
+	when generating PIC for librt.  Use separate PIC implementations
+	for m680x0 and Coldfire.
+	* sysdeps/unix/sysv/linux/m68k/vfork.S (__vfork): On Coldfire targets,
+	load the GOTPC offset into a temporary register first.
+
+2006-10-02  Daniel Jacobowitz  <dan@codesourcery.com>
+
+	* sysdeps/pthread/gai_misc.h (__gai_start_notify_thread): Use
+	sigprocmask instead.
+	(__gai_create_helper_thread): Likewise.
+
 2006-10-01  Petr Salinger  <Petr.Salinger@seznam..cz>
 
 	* sysdeps/pthread/gai_misc.h (__gai_start_notify_thread): Use
diff -Nurd linuxthreads.orig/specific.c linuxthreads/specific.c
--- linuxthreads.orig/specific.c	2006-07-24 19:25:34.000000000 +0200
+++ linuxthreads/specific.c	2007-01-08 03:14:22.000000000 +0100
@@ -204,8 +204,9 @@
   __pthread_lock(THREAD_GETMEM(self, p_lock), self);
   for (i = 0; i < PTHREAD_KEY_1STLEVEL_SIZE; i++) {
     if (THREAD_GETMEM_NC(self, p_specific[i]) != NULL) {
-      free(THREAD_GETMEM_NC(self, p_specific[i]));
+      void *p = THREAD_GETMEM_NC(self, p_specific[i]);
       THREAD_SETMEM_NC(self, p_specific[i], NULL);
+      free(p);
     }
   }
   __pthread_unlock(THREAD_GETMEM(self, p_lock));
diff -Nurd linuxthreads.orig/sysdeps/ia64/tcb-offsets.sym linuxthreads/sysdeps/ia64/tcb-offsets.sym
--- linuxthreads.orig/sysdeps/ia64/tcb-offsets.sym	2006-04-26 17:04:13.000000000 +0200
+++ linuxthreads/sysdeps/ia64/tcb-offsets.sym	2007-01-08 03:14:22.000000000 +0100
@@ -3,7 +3,7 @@
 
 --
 #ifdef USE_TLS
-MULTIPLE_THREADS_OFFSET offsetof (struct _pthread_descr_struct, p_multiple_threads) - TCB_PRE_SIZE
+MULTIPLE_THREADS_OFFSET offsetof (struct _pthread_descr_struct, p_multiple_threads) - TLS_PRE_TCB_SIZE
 #else
 MULTIPLE_THREADS_OFFSET offsetof (tcbhead_t, multiple_threads)
 #endif
diff -Nurd linuxthreads.orig/sysdeps/m68k/pt-machine.h linuxthreads/sysdeps/m68k/pt-machine.h
--- linuxthreads.orig/sysdeps/m68k/pt-machine.h	2003-07-31 21:15:42.000000000 +0200
+++ linuxthreads/sysdeps/m68k/pt-machine.h	2007-01-08 03:14:22.000000000 +0100
@@ -27,7 +27,9 @@
 #endif
 
 extern long int testandset (int *spinlock);
+#ifndef __mcoldfire__
 extern int __compare_and_swap (long int *p, long int oldval, long int newval);
+#endif
 
 /* Spinlock implementation; required.  */
 PT_EI long int
@@ -50,6 +52,7 @@
 register char * stack_pointer __asm__ ("%sp");
 
 
+#ifndef __mcoldfire__
 /* Compare-and-swap for semaphores. */
 
 #define HAS_COMPARE_AND_SWAP
@@ -65,5 +68,6 @@
 
   return ret;
 }
+#endif
 
 #endif /* pt-machine.h */
diff -Nurd linuxthreads.orig/sysdeps/pthread/gai_misc.h linuxthreads/sysdeps/pthread/gai_misc.h
--- linuxthreads.orig/sysdeps/pthread/gai_misc.h	2006-10-01 06:06:14.000000000 +0200
+++ linuxthreads/sysdeps/pthread/gai_misc.h	2007-01-08 03:14:22.000000000 +0100
@@ -34,7 +34,7 @@
 {
   sigset_t ss;
   sigemptyset (&ss);
-  __sigprocmask (SIG_SETMASK, &ss, NULL);
+  sigprocmask (SIG_SETMASK, &ss, NULL);
 }
 
 extern inline int
@@ -55,12 +55,12 @@
   sigset_t ss;
   sigset_t oss;
   sigfillset (&ss);
-  __sigprocmask (SIG_SETMASK, &ss, &oss);
+  sigprocmask (SIG_SETMASK, &ss, &oss);
 
   int ret = pthread_create (threadp, &attr, tf, arg);
 
   /* Restore the signal mask.  */
-  __sigprocmask (SIG_SETMASK, &oss, NULL);
+  sigprocmask (SIG_SETMASK, &oss, NULL);
 
   (void) pthread_attr_destroy (&attr);
   return ret;
