#! /bin/sh -e

# All lines beginning with `# DP:' are a description of the patch.
# DP: Description: Disable SSE for 2.2.x kernels.
# DP: Related bugs: 218524
# DP: Author: Daniel Jacobowitz <dan@debian.org>
# DP: Upstream status: Not submitted
# DP: Details: Should be submitted, must be regenerated against CVS
# DP: Date: 2003-11-01 (Updated 2003-11-02) (Updated 2004-01-02)
# DP: Date: (Updated 2005-01-03 gotom)

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p0 < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p0 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# append the patch here and adjust the -p? flag in the patch calls.
2005-01-03  GOTO Masanori  <gotom@debian.org>

	* sysdeps/i386/dl-machine.h: Remove including dl-procinfo.h.
	* sysdeps/unix/sysv/linux/i386/dl-procinfo.h: move
	dl_adjust_procinfo() to ...
	* sysdeps/i386/dl-machine.h: ... here.  Change GL(dl_hwcap) to
	GLRO(dl_hwcap).
	* sysdeps/generic/libc-start.c: Remove including dl-librecon.h,
	dl-machine.h and dl-osinfo.h.
	* elf/dl-support.c: Regenerated.

2003-11-01  Daniel Jacobowitz  <drow@mvista.com>

	* sysdeps/i386/dl-machine.h (dl_platform_init): Use
	DL_ADJUST_PROCINFO.
	* sysdeps/unix/sysv/linux/i386/dl-procinfo.h
	(DL_ADJUST_PROCINFO): Define.
	(dl_adjust_procinfo): New function.  Disable SSE and SSE2
	for pre-2.4.x kernels.

Index: sysdeps/i386/dl-machine.h
===================================================================
RCS file: /cvs/glibc/libc/sysdeps/i386/dl-machine.h,v
retrieving revision 1.128
diff -u -r1.128 dl-machine.h
--- sysdeps/i386/dl-machine.h	28 Sep 2004 04:54:41 -0000	1.128
+++ sysdeps/i386/dl-machine.h	3 Jan 2005 05:39:25 -0000
@@ -357,6 +357,17 @@
   if (GLRO(dl_platform) != NULL && *GLRO(dl_platform) == '\0')
     /* Avoid an empty string which would disturb us.  */
     GLRO(dl_platform) = NULL;
+
+#ifdef DL_ADJUST_PROCINFO
+  if (GL(dl_osversion) < 0x020400)
+    {
+      /* Unfortunately, while the capability is named OSFXSR, it's
+	 actually hardware FXSR direct from CPUID.  And we can't test
+	 CR4 ourselves, because we're in protected mode.  Disable it
+	 for kernels which might not have actually enabled OSFXSR.  */
+      GL(dl_hwcap) &= ~(HWCAP_I386_OSFXSR | HWCAP_I386_XMM | HWCAP_I386_XMM2);
+    }
+#endif
 }
 
 static inline Elf32_Addr
Index: sysdeps/generic/libc-start.c
===================================================================
RCS file: /cvs/glibc/libc/sysdeps/generic/libc-start.c,v
retrieving revision 1.52
diff -u -r1.52 libc-start.c
--- sysdeps/generic/libc-start.c	31 Mar 2004 01:46:43 -0000	1.52
+++ sysdeps/generic/libc-start.c	3 Jan 2005 05:39:25 -0000
@@ -127,15 +129,28 @@
 #  endif
   _dl_aux_init (auxvec);
 # endif
-# ifdef DL_SYSDEP_OSCHECK
   if (!__libc_multiple_libcs)
     {
+# ifdef DL_SYSDEP_OSCHECK
       /* This needs to run to initiliaze _dl_osversion before TLS
 	 setup might check it.  */
       DL_SYSDEP_OSCHECK (__libc_fatal);
-    }
 # endif
 
+  /* Moved here so that we can frob hwcap early enough.  */
+# ifdef DL_OSVERSION_INIT
+      DL_OSVERSION_INIT;
+# endif
+
+# ifdef DL_PLATFORM_INIT
+      DL_PLATFORM_INIT;
+# endif
+
+      /* Now determine the length of the platform string.  */
+      if (_dl_platform != NULL)
+	_dl_platformlen = strlen (_dl_platform);
+    }
+
   /* Initialize the thread library at least a bit since the libgcc
      functions are using thread functions if these are available and
      we need to setup errno.  If there is no thread library and we
Index: elf/dl-support.c
===================================================================
RCS file: /cvs/glibc/libc/elf/dl-support.c,v
retrieving revision 1.87
diff -u -r1.87 dl-support.c
--- elf/dl-support.c	6 Nov 2004 00:24:49 -0000	1.87
+++ elf/dl-support.c	3 Jan 2005 05:39:25 -0000
@@ -269,18 +269,6 @@
 	__unsetenv ("MALLOC_CHECK_");
     }
 
-#ifdef DL_PLATFORM_INIT
-  DL_PLATFORM_INIT;
-#endif
-
-#ifdef DL_OSVERSION_INIT
-  DL_OSVERSION_INIT;
-#endif
-
-  /* Now determine the length of the platform string.  */
-  if (_dl_platform != NULL)
-    _dl_platformlen = strlen (_dl_platform);
-
   /* Scan for a program header telling us the stack is nonexecutable.  */
   if (_dl_phdr != NULL)
     for (uint_fast16_t i = 0; i < _dl_phnum; ++i)
Index: sysdeps/unix/sysv/linux/i386/dl-procinfo.h
===================================================================
RCS file: /cvs/glibc/libc/sysdeps/unix/sysv/linux/i386/dl-procinfo.h,v
retrieving revision 1.18
diff -u -r1.18 dl-procinfo.h
--- sysdeps/unix/sysv/linux/i386/dl-procinfo.h	7 Mar 2004 08:38:42 -0000	1.18
+++ sysdeps/unix/sysv/linux/i386/dl-procinfo.h	3 Jan 2005 05:39:25 -0000
@@ -18,6 +18,8 @@
    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
    02111-1307 USA.  */
 
+#ifndef _DL_PROCINFO_H
+
 #include <sysdeps/i386/dl-procinfo.h>
 #include <ldsodefs.h>
 
@@ -41,3 +43,7 @@
 
   return 0;
 }
+
+#define DL_ADJUST_PROCINFO
+
+#endif /* _DL_PROCINFO_H */



# it should not be used because dl-osinfo.h is already included.
# --- sysdeps/generic/libc-start.c	31 Mar 2004 01:46:43 -0000	1.52
# +++ sysdeps/generic/libc-start.c	3 Jan 2005 05:39:25 -0000
# @@ -23,6 +23,8 @@
#  #include <bp-start.h>
#  #include <bp-sym.h>
#  
# +#include <dl-osinfo.h>
# +
#  extern void __libc_init_first (int argc, char **argv, char **envp);
#  
#  extern int __libc_multiple_libcs;
