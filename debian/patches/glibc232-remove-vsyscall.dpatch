#! /bin/sh -e

# All lines beginning with `# DP:' are a description of the patch.
# DP: Description: Remove __ASSUME_VSYSCALL to fix the system startup failure
# DP:		   on the machine using PAX.
# DP: Related bugs: #245563
# DP: Dpatch author: GOTO Masanori <gotom@debian.org>
# DP: Patch author: Ulrich Drepper <drepper@redhat.com>
# DP: Upstream status: In CVS
# DP: Status Details: 
# DP: Date: 2004-07-29

PATCHLEVEL=0

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p$PATCHLEVEL < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p$PATCHLEVEL < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# append the patch here and adjust the -p? flag in the patch calls.
2003-12-11  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/kernel-features.h: Remove __ASSUME_VSYSCALL.
	There might always be processes which have no vDSO.
	* sysdeps/generic/dl-sysdep.c: Remove __ASSUME_VSYSCALL uses.
	* sysdeps/unix/sysv/linux/i386/sigaction.c: Likewise.


Index: sysdeps/unix/sysv/linux/kernel-features.h
===================================================================
RCS file: /cvs/glibc/libc/sysdeps/unix/sysv/linux/kernel-features.h,v
retrieving revision 1.70
retrieving revision 1.71
diff -u -r1.70 -r1.71
--- sysdeps/unix/sysv/linux/kernel-features.h	27 Nov 2003 05:17:48 -0000	1.70
+++ sysdeps/unix/sysv/linux/kernel-features.h	12 Dec 2003 04:31:39 -0000	1.71
@@ -320,12 +320,6 @@
 # define __ASSUME_NETLINK_SUPPORT	1
 #endif
 
-/* For x86, support for the sysenter instruction was available in
-   2.5.53.  But the unwind information was added only in 2.5.69.  */
-#if __LINUX_KERNEL_VERSION >= 132421 && defined __i386__
-# define __ASSUME_VSYSCALL	1
-#endif
-
 /* The requeue futex functionality was introduced in 2.5.70.  */
 #if __LINUX_KERNEL_VERSION >= 132422
 # define __ASSUME_FUTEX_REQUEUE	1
Index: sysdeps/generic/dl-sysdep.c
===================================================================
RCS file: /cvs/glibc/libc/sysdeps/generic/dl-sysdep.c,v
retrieving revision 1.101
retrieving revision 1.102
diff -u -r1.101 -r1.102
--- sysdeps/generic/dl-sysdep.c	8 Oct 2003 21:11:09 -0000	1.101
+++ sysdeps/generic/dl-sysdep.c	12 Dec 2003 04:31:10 -0000	1.102
@@ -97,7 +97,7 @@
 #  define set_seen(tag) seen |= M ((tag)->a_type)
 # endif
 #endif
-#if defined NEED_DL_SYSINFO && !defined __ASSUME_VSYSCALL
+#ifdef NEED_DL_SYSINFO
   ElfW(Word) new_sysinfo = 0;
 #endif
 
@@ -158,11 +158,7 @@
 	break;
 #ifdef NEED_DL_SYSINFO
       case AT_SYSINFO:
-# ifndef __ASSUME_VSYSCALL
 	new_sysinfo = av->a_un.a_val;
-# else
-	GL(dl_sysinfo) = av->a_un.a_val;
-# endif
 	break;
       case AT_SYSINFO_EHDR:
 	GL(dl_sysinfo_dso) = av->a_un.a_ptr;
@@ -202,7 +198,7 @@
     GL(dl_pagesize) = __getpagesize ();
 #endif
 
-#if defined NEED_DL_SYSINFO && !defined __ASSUME_VSYSCALL
+#if defined NEED_DL_SYSINFO
   /* Only set the sysinfo value if we also have the vsyscall DSO.  */
   if (GL(dl_sysinfo_dso) != 0)
     GL(dl_sysinfo) = new_sysinfo;
Index: sysdeps/unix/sysv/linux/i386/sigaction.c
===================================================================
RCS file: /cvs/glibc/libc/sysdeps/unix/sysv/linux/i386/sigaction.c,v
retrieving revision 1.42
retrieving revision 1.43
diff -u -r1.42 -r1.43
--- sysdeps/unix/sysv/linux/i386/sigaction.c	3 Sep 2003 03:21:27 -0000	1.42
+++ sysdeps/unix/sysv/linux/i386/sigaction.c	12 Dec 2003 04:30:48 -0000	1.43
@@ -25,6 +25,7 @@
 
 #include <sysdep.h>
 #include <sys/syscall.h>
+#include <ldsodefs.h>
 
 #include <kernel-features.h>
 
@@ -84,16 +85,16 @@
       if (act)
 	{
 	  kact.k_sa_handler = act->sa_handler;
+	  kact.sa_flags = act->sa_flags;
 	  memcpy (&kact.sa_mask, &act->sa_mask, sizeof (sigset_t));
 
-# if __ASSUME_VSYSCALL == 0
-	  kact.sa_flags = act->sa_flags | SA_RESTORER;
+	  if (GL(dl_sysinfo_dso) == NULL)
+	    {
+	      kact.sa_flags |= SA_RESTORER;
 
-	  kact.sa_restorer = ((act->sa_flags & SA_SIGINFO)
-			      ? &restore_rt : &restore);
-# else
-	  kact.sa_flags = act->sa_flags;
-# endif
+	      kact.sa_restorer = ((act->sa_flags & SA_SIGINFO)
+				  ? &restore_rt : &restore);
+	    }
 	}
 
       /* XXX The size argument hopefully will have to be changed to the
@@ -159,7 +160,6 @@
 weak_alias (__libc_sigaction, sigaction)
 #endif
 
-#if __ASSUME_VSYSCALL == 0
 /* NOTE: Please think twice before making any changes to the bits of
    code below.  GDB needs some intimate knowledge about it to
    recognize them as signal trampolines, and make backtraces through
@@ -168,8 +168,8 @@
    If you ever feel the need to make any changes, please notify the
    appropriate GDB maintainer.  */
 
-# define RESTORE(name, syscall) RESTORE2 (name, syscall)
-# define RESTORE2(name, syscall) \
+#define RESTORE(name, syscall) RESTORE2 (name, syscall)
+#define RESTORE2(name, syscall) \
 asm						\
   (						\
    ".text\n"					\
@@ -179,14 +179,14 @@
    "	int  $0x80"				\
    );
 
-# ifdef __NR_rt_sigaction
+#ifdef __NR_rt_sigaction
 /* The return code for realtime-signals.  */
 RESTORE (restore_rt, __NR_rt_sigreturn)
-# endif
+#endif
 
 /* For the boring old signals.  */
-# undef RESTORE2
-# define RESTORE2(name, syscall) \
+#undef RESTORE2
+#define RESTORE2(name, syscall) \
 asm						\
   (						\
    ".text\n"					\
@@ -198,4 +198,3 @@
    );
 
 RESTORE (restore, __NR_sigreturn)
-#endif
