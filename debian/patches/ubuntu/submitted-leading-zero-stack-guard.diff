Description: require that the first byte in the stack guard in a NULL byte.
Ubuntu: https://bugs.launchpad.net/bugs/413278
Upstream: http://sourceware.org/bugzilla/show_bug.cgi?id=10149
Patch: http://sourceware.org/bugzilla/attachment.cgi?id=3933&action=view

Index: glibc-2.9/sysdeps/unix/sysv/linux/dl-osinfo.h
===================================================================
--- glibc-2.9.orig/sysdeps/unix/sysv/linux/dl-osinfo.h	2009-08-25 00:03:27.000000000 -0700
+++ glibc-2.9/sysdeps/unix/sysv/linux/dl-osinfo.h	2009-08-25 00:06:19.000000000 -0700
@@ -65,21 +65,26 @@
 static inline uintptr_t __attribute__ ((always_inline))
 _dl_setup_stack_chk_guard (void)
 {
-  uintptr_t ret;
+  uintptr_t ret = 0;
+  /* Having a leading zero byte protects the stack guard from being
+     overwritten with str* write operations or exposed by an
+     unterminated str* read operation. */
+  unsigned char *p = ((unsigned char *) &ret) + 1;
+  int size = sizeof (ret) - 1;
 #ifdef ENABLE_STACKGUARD_RANDOMIZE
   int fd = __open ("/dev/urandom", O_RDONLY);
   if (fd >= 0)
     {
-      ssize_t reslen = __read (fd, &ret, sizeof (ret));
+      ssize_t reslen = __read (fd, p, size);
       __close (fd);
-      if (reslen == (ssize_t) sizeof (ret))
+      if (reslen == (ssize_t) size)
 	return ret;
     }
 #endif
-  ret = 0;
-  unsigned char *p = (unsigned char *) &ret;
-  p[sizeof (ret) - 1] = 255;
-  p[sizeof (ret) - 2] = '\n';
+  /* Lacking any other form of randomized stack guard, add other
+     terminators in an attempt to block things like fgets, etc. */
+  p[size - 1] = 255;
+  p[size - 2] = '\n';
 #ifdef HP_TIMING_NOW
   hp_timing_t hpt;
   HP_TIMING_NOW (hpt);
