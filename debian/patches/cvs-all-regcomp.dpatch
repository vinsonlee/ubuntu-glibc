#! /bin/sh -e

# All lines beginning with `# DP:' are a description of the patch.
# DP: Description: re_compile_internal call __libc_lock_init after init_dfa
# DP: Related bugs:
# DP: Dpatch author: LaMont Jones
# DP: Patch author: Ulrich Drepper
# DP: Upstream status: In CVS
# DP: Status Details: 
# DP: Date: 2006-04-06

PATCHLEVEL=0

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p$PATCHLEVEL < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p$PATCHLEVEL < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# append the patch here and adjust the -p? flag in the patch calls.
CVSROOT:	/cvs/glibc
Module name:	libc
Changes by:	drepper@sources.redhat.com	2005-07-10 22:01:15

Modified files:
	posix          : regcomp.c 

Log message:
	(re_compile_internal): Call __libc_lock_init after init_dfa.

===================================================================
RCS file: /cvs/glibc/libc/posix/regcomp.c,v
retrieving revision 1.95
retrieving revision 1.96
diff -u -r1.95 -r1.96
--- posix/regcomp.c	2005/05/06 23:33:52	1.95
+++ posix/regcomp.c	2005/07/10 22:01:14	1.96
@@ -774,8 +774,6 @@
     }
   preg->used = sizeof (re_dfa_t);
 
-  __libc_lock_init (dfa->lock);
-
   err = init_dfa (dfa, length);
   if (BE (err != REG_NOERROR, 0))
     {
@@ -789,6 +787,8 @@
   strncpy (dfa->re_str, pattern, length + 1);
 #endif
 
+  __libc_lock_init (dfa->lock);
+
   err = re_string_construct (&regexp, pattern, length, preg->translate,
 			     syntax & RE_ICASE, dfa);
   if (BE (err != REG_NOERROR, 0))
