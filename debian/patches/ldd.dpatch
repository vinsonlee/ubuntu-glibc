#! /bin/sh -e

# All lines beginning with `# DP:' are a description of the patch.
# DP: Make ldd handle non-executable shared objects
# DP: 
# DP: Updated by gotom, it's nice to merge to the upstream after my review.
# Date: (Updated 2004-01-02 gotom)

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p0 < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p0 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

Index: elf/ldd.bash.in
===================================================================
RCS file: /cvs/glibc/libc/elf/ldd.bash.in,v
retrieving revision 1.33
diff -u -r1.33 ldd.bash.in
--- elf/ldd.bash.in	8 Dec 2004 22:08:47 -0000	1.33
+++ elf/ldd.bash.in	2 Jan 2005 09:03:01 -0000
@@ -31,6 +31,7 @@
 warn=
 bind_now=
 verbose=
+filename_magic_regex="((^|/)lib|.so$)"
 
 while test $# -gt 0; do
   case "$1" in
@@ -148,8 +149,11 @@
     echo "ldd: ${file}:" $"No such file or directory" >&2
     result=1
   elif test -r "$file"; then
-    test -x "$file" || echo 'ldd:' $"\
-warning: you do not have execution permission for" "\`$file'" >&2
+    if test ! -x "$file" && eval echo "$file" \
+	| egrep -v "$filename_magic_regex" > /dev/null; then
+	echo 'ldd:' $"warning: you do not have execution permission for"\
+	    "\`$file'" >&2
+    fi
     RTLD=
     for rtld in ${RTLDLIST}; do
       if test -x $rtld; then
@@ -171,7 +175,12 @@
       # If the program exits with exit code 5, it means the process has been
       # invoked with __libc_enable_secure.  Fall back to running it through
       # the dynamic linker.
-      try_trace "$file"
+      if [ ! -x "$file" ] && eval file -L "$file" 2>/dev/null \
+      | sed 10q | egrep "$file_magic_regex" > /dev/null; then
+	try_trace "${RTLD}" "$file"
+      else
+	try_trace "$file"
+      fi
       rc=$?
       if [ $rc = 5 ]; then
 	try_trace "$RTLD" "$file"
