#! /bin/sh -e

# All lines beginning with `# DP:' are a description of the patch.
# DP: Description: pread64 syscall number renamed on sparc
# DP: Author: Thorsten Kukuk
# DP: Upstream status: Pending
# DP: Status Details: Submitted 2003-10-08, no response
# DP: Date: 2003-11-01

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# append the patch here and adjust the -p? flag in the patch calls.
2003-10-08  Thorsten Kukuk  <kukuk@suse.de>

        * sysdeps/unix/sysv/linux/sparc/sparc64/sysdep.h (pread, pwrite):  
        Define __NR_pread/__NR_pwrite if not done in kernel headers

--- glibc-2.3.2/sysdeps/unix/sysv/linux/sparc/sparc64/sysdep.h
+++ glibc-2.3.2/sysdeps/unix/sysv/linux/sparc/sparc64/sysdep.h      2003/10/08 07:40:39
@@ -29,6 +29,16 @@
 #undef SYS_ify
 #define SYS_ify(syscall_name) __NR_##syscall_name
 
+/* This is a kludge to make syscalls.list find these under the names
+   pread and pwrite, since some kernel headers define those names
+   and some define the *64 names for the same system calls.  */
+#if !defined __NR_pread && defined __NR_pread64
+# define __NR_pread __NR_pread64
+#endif
+#if !defined __NR_pwrite && defined __NR_pwrite64
+# define __NR_pwrite __NR_pwrite64
+#endif
+
 #ifdef __ASSEMBLER__
 
 #define LOADSYSCALL(x) mov __NR_##x, %g1

