--- glibc-2.6-orig/elf/dl-support.c	2007-07-19 23:45:07.000000000 +0200
+++ glibc-2.6/elf/dl-support.c	2007-07-20 04:33:59.000000000 +0200
@@ -137,6 +137,7 @@
 int (*_dl_make_stack_executable_hook) (void **) internal_function
   = _dl_make_stack_executable;
 
+int volatile _dl_thread_gscope_count;
 struct dl_scope_free_list *_dl_scope_free_list;
 
 #ifdef NEED_DL_SYSINFO
--- glibc-2.6-orig/sysdeps/generic/ldsodefs.h	2007-07-19 23:45:14.000000000 +0200
+++ glibc-2.6/sysdeps/generic/ldsodefs.h	2007-07-20 04:41:36.000000000 +0200
@@ -489,6 +489,7 @@
     size_t count;
     struct r_scope_elem **list[50];
   } *_dl_scope_free_list;
+  EXTERN volatile int _dl_thread_gscope_count;
 #ifdef SHARED
 };
 # define __rtld_global_attribute__
--- glibc-2.6.1-orig/sysdeps/mach/hurd/tls.h	2005-02-02 20:43:56.000000000 +0100
+++ glibc-2.6.1/sysdeps/mach/hurd/tls.h	2007-08-01 22:35:38.000000000 +0200
@@ -73,5 +73,18 @@
 
 #endif /* HAVE_TLS_SUPPORT */
 
+#ifndef __ASSEMBLER__
+#include <mach/mach_traps.h>
+#include <atomic.h>
+/* Temporary poor-man's global scope switch support: just busy-waits */
+#define THREAD_GSCOPE_SET_FLAG() \
+	asm volatile ("lock incl %0":"=m"(GL(dl_thread_gscope_count)))
+#define THREAD_GSCOPE_RESET_FLAG() \
+	asm volatile ("lock decl %0":"=m"(GL(dl_thread_gscope_count)))
+#define THREAD_GSCOPE_WAIT() \
+  while (GL(dl_thread_gscope_count)) { \
+    __swtch_pri (0); \
+  }
+#endif
 
 #endif /* tls.h */
--- /dev/null	2007-07-20 20:36:08.980000000 +0200
+++ glibc-2.6/sysdeps/mach/hurd/sysdep-cancel.h	2007-07-20 01:24:22.000000000 +0200
@@ -0,0 +1,9 @@
+#include <sysdep.h>
+
+/* Always multi-thread (since there's at least the sig handler), but no
+   handling enabled.  */
+#define SINGLE_THREAD_P (0)
+#define RTLD_SINGLE_THREAD_P (0)
+#define LIBC_CANCEL_ASYNC()	0 /* Just a dummy value.  */
+#define LIBC_CANCEL_RESET(val)	((void)(val)) /* Nothing, but evaluate it.  */
+#define LIBC_CANCEL_HANDLED()	/* Nothing.  */
